lines3D(x=c(-100,100),y=c(0,0),z=c(0,0),type="l",colkey=F,col="black",add=T,lty=2,lwd=2)
plotrgl()
head(percents)
names(percent2)=(as.character(x2[as.character(x1[names(percents)])]))
head(percent2)
most.var=names(percents[1:length(loading[loading>=equalloading.cutoff])])
head(most.var)
PC
head(contribution)
plot(pca)
autoplot(pca)
PC=1
PCcontribute=contribution[,PC]
loading=abs(PCcontribute)
eigs <- pca$sdev^2
ve=(eigs / sum(eigs))*100
percent.variation=signif(ve,4)
percents=(PCcontribute*PCcontribute)*percent.variation[PC]
loading=loading[order(loading,decreasing=T)]
length(loading[loading>=equalloading.cutoff])
percents=percents[order(percents,decreasing=T)]
percent2=percents
temppercent=0
i=1
while(i<=length(percents)){
percents[i]=percents[i]+temppercent
temppercent=percents[i]
i=i+1
}
plot(x=c(1:length(percents)),y=percents,main=paste("PC",PC,sep=""),ylab="Percent Variation",xlab="Cumulative Gene Contribution  to Variance")
lines(x=c(length(loading[loading>=equalloading.cutoff]),length(loading[loading>=equalloading.cutoff])),y=c(0,percents[length(loading[loading>=equalloading.cutoff])]),col="red",lty=2,lwd=3)
lines(x=c(0,length(loading[loading>=equalloading.cutoff])),y=c(percents[length(loading[loading>=equalloading.cutoff])],percents[length(loading[loading>=equalloading.cutoff])]),col="red",lty=2,lwd=3)
names(percent2)=(as.character(x2[as.character(x1[names(percents)])]))
head(percent2)
head(percents)
dim(percents)
length(percents)
length(percents2)
length(percent2)
PC=1
PCcontribute=contribution[,PC]
loading=abs(PCcontribute)
eigs <- pca$sdev^2
ve=(eigs / sum(eigs))*100
percent.variation=signif(ve,4)
percents=(PCcontribute*PCcontribute)*percent.variation[PC]
loading=loading[order(loading,decreasing=T)]
length(loading[loading>=equalloading.cutoff])
percents=percents[order(percents,decreasing=T)]
percent2=percents
temppercent=0
i=1
while(i<=length(percents)){
percents[i]=percents[i]+temppercent
temppercent=percents[i]
i=i+1
}
plot(x=c(1:length(percents)),y=percents,main=paste("PC",PC,sep=""),ylab="Percent Variation",xlab="Cumulative Gene Contribution  to Variance")
lines(x=c(length(loading[loading>=equalloading.cutoff]),length(loading[loading>=equalloading.cutoff])),y=c(0,percents[length(loading[loading>=equalloading.cutoff])]),col="red",lty=2,lwd=3)
lines(x=c(0,length(loading[loading>=equalloading.cutoff])),y=c(percents[length(loading[loading>=equalloading.cutoff])],percents[length(loading[loading>=equalloading.cutoff])]),col="red",lty=2,lwd=3)
head(percent1)
head(percent2)
head(percents)
head(contributions[,1])
head(contributions)
head(contribution[,1])
head(contribution[order(contributions[,1]),1])
head(contribution[sort(contributions[,1],decreasing = T),1])
head(contribution[sort(contribution[,1],decreasing = T),1])
head(contribution[order(contribution[,1],decreasing = T),1])
head(as.matrix(percent2))
percent2=as.matrix(percent2)
percent2[,2]=(as.character(x2[as.character(x1[row.names(percent2)])]))
names(percent2)=(as.character(x2[as.character(x1[names(percent2)])]))
head(as.matrix(percent2))
percent2=percent2[,c(1,1)]
percent2[,1]=(as.character(x2[as.character(x1[row.names(percent2)])]))
head(percent2)
colnames(percent2)=c("symbol",paste("PC",PC," percent variation",sep=""))
head(percent2)
PCdata=percent2
PC=3
PCcontribute=contribution[,PC]
loading=abs(PCcontribute)
eigs <- pca$sdev^2
ve=(eigs / sum(eigs))*100
percent.variation=signif(ve,4)
percents=(PCcontribute*PCcontribute)*percent.variation[PC]
loading=loading[order(loading,decreasing=T)]
length(loading[loading>=equalloading.cutoff])
percents=percents[order(percents,decreasing=T)]
percent2=percents
temppercent=0
i=1
while(i<=length(percents)){
percents[i]=percents[i]+temppercent
temppercent=percents[i]
i=i+1
}
plot(x=c(1:length(percents)),y=percents,main=paste("PC",PC,sep=""),ylab="Percent Variation",xlab="Cumulative Gene Contribution  to Variance")
lines(x=c(length(loading[loading>=equalloading.cutoff]),length(loading[loading>=equalloading.cutoff])),y=c(0,percents[length(loading[loading>=equalloading.cutoff])]),col="red",lty=2,lwd=3)
lines(x=c(0,length(loading[loading>=equalloading.cutoff])),y=c(percents[length(loading[loading>=equalloading.cutoff])],percents[length(loading[loading>=equalloading.cutoff])]),col="red",lty=2,lwd=3)
percent2=as.matrix(percent2)
percent2=percent2[,c(1,1)]
percent2[,1]=(as.character(x2[as.character(x1[row.names(percent2)])]))
colnames(percent2)=c("symbol",paste("PC",PC," percent variation",sep=""))
write.csv("/Users/johncsantiago/Google Drive File Stream/My Drive/Sanders Lab Files/MGH Project/John R Output/PC1genevariation.csv")
write.csv(PCdata,"/Users/johncsantiago/Google Drive File Stream/My Drive/Sanders Lab Files/MGH Project/John R Output/PC1genevariation.csv")
head(percent2)
write.csv(percent2,"/Users/johncsantiago/Google Drive File Stream/My Drive/Sanders Lab Files/MGH Project/John R Output/PC3genevariation.csv")
PC=2
PCcontribute=contribution[,PC]
loading=abs(PCcontribute)
eigs <- pca$sdev^2
ve=(eigs / sum(eigs))*100
percent.variation=signif(ve,4)
percents=(PCcontribute*PCcontribute)*percent.variation[PC]
loading=loading[order(loading,decreasing=T)]
length(loading[loading>=equalloading.cutoff])
percents=percents[order(percents,decreasing=T)]
percent2=percents
temppercent=0
i=1
while(i<=length(percents)){
percents[i]=percents[i]+temppercent
temppercent=percents[i]
i=i+1
}
plot(x=c(1:length(percents)),y=percents,main=paste("PC",PC,sep=""),ylab="Percent Variation",xlab="Cumulative Gene Contribution  to Variance")
lines(x=c(length(loading[loading>=equalloading.cutoff]),length(loading[loading>=equalloading.cutoff])),y=c(0,percents[length(loading[loading>=equalloading.cutoff])]),col="red",lty=2,lwd=3)
lines(x=c(0,length(loading[loading>=equalloading.cutoff])),y=c(percents[length(loading[loading>=equalloading.cutoff])],percents[length(loading[loading>=equalloading.cutoff])]),col="red",lty=2,lwd=3)
percent2=as.matrix(percent2)
percent2=percent2[,c(1,1)]
percent2[,1]=(as.character(x2[as.character(x1[row.names(percent2)])]))
colnames(percent2)=c("symbol",paste("PC",PC," percent variation",sep=""))
head(percent2)
most.var=names(percents[1:length(loading[loading>=equalloading.cutoff])])
write.csv(percent2,"/Users/johncsantiago/Google Drive File Stream/My Drive/Sanders Lab Files/MGH Project/John R Output/PC2genevariation.csv")
head(most.var)
most.var=percent2[(percents[1:length(loading[loading>=equalloading.cutoff])]),]
dim(most.var)
tail(most.var)
most.var[,c(6000:6286)]
most.var[c(6000:6286),]
head(most.var)
head(percent2)
length(loading[loading>=equalloading.cutoff])
most.var=percent2[1:length(loading[loading>=equalloading.cutoff]),]
dim(most.var)
tail(most.var)
head(most.var)
equalloading.cutoff
PC=1
PCcontribute=contribution[,PC]
loading=abs(PCcontribute)
eigs <- pca$sdev^2
ve=(eigs / sum(eigs))*100
percent.variation=signif(ve,4)
percents=(PCcontribute*PCcontribute)*percent.variation[PC]
loading=loading[order(loading,decreasing=T)]
length(loading[loading>=equalloading.cutoff])
percents=percents[order(percents,decreasing=T)]
percent2=percents
temppercent=0
i=1
while(i<=length(percents)){
percents[i]=percents[i]+temppercent
temppercent=percents[i]
i=i+1
}
plot(x=c(1:length(percents)),y=percents,main=paste("PC",PC,sep=""),ylab="Percent Variation",xlab="Cumulative Gene Contribution  to Variance")
lines(x=c(length(loading[loading>=equalloading.cutoff]),length(loading[loading>=equalloading.cutoff])),y=c(0,percents[length(loading[loading>=equalloading.cutoff])]),col="red",lty=2,lwd=3)
lines(x=c(0,length(loading[loading>=equalloading.cutoff])),y=c(percents[length(loading[loading>=equalloading.cutoff])],percents[length(loading[loading>=equalloading.cutoff])]),col="red",lty=2,lwd=3)
percent2=as.matrix(percent2)
percent2=percent2[,c(1,1)]
percent2[,1]=(as.character(x2[as.character(x1[row.names(percent2)])]))
colnames(percent2)=c("symbol",paste("PC",PC," percent variation",sep=""))
most.var=percent2[1:length(loading[loading>=equalloading.cutoff]),]
head(most.var)
write.csv(most.var,"/Users/johncsantiago/Google Drive File Stream/My Drive/Sanders Lab Files/MGH Project/John R Output/PC1genevariation.csv")
PC=2
PCcontribute=contribution[,PC]
loading=abs(PCcontribute)
eigs <- pca$sdev^2
ve=(eigs / sum(eigs))*100
percent.variation=signif(ve,4)
percents=(PCcontribute*PCcontribute)*percent.variation[PC]
loading=loading[order(loading,decreasing=T)]
length(loading[loading>=equalloading.cutoff])
percents=percents[order(percents,decreasing=T)]
percent2=percents
temppercent=0
i=1
while(i<=length(percents)){
percents[i]=percents[i]+temppercent
temppercent=percents[i]
i=i+1
}
plot(x=c(1:length(percents)),y=percents,main=paste("PC",PC,sep=""),ylab="Percent Variation",xlab="Cumulative Gene Contribution  to Variance")
lines(x=c(length(loading[loading>=equalloading.cutoff]),length(loading[loading>=equalloading.cutoff])),y=c(0,percents[length(loading[loading>=equalloading.cutoff])]),col="red",lty=2,lwd=3)
lines(x=c(0,length(loading[loading>=equalloading.cutoff])),y=c(percents[length(loading[loading>=equalloading.cutoff])],percents[length(loading[loading>=equalloading.cutoff])]),col="red",lty=2,lwd=3)
percent2=as.matrix(percent2)
percent2=percent2[,c(1,1)]
percent2[,1]=(as.character(x2[as.character(x1[row.names(percent2)])]))
colnames(percent2)=c("symbol",paste("PC",PC," percent variation",sep=""))
most.var=percent2[1:length(loading[loading>=equalloading.cutoff]),]
write.csv(most.var,"/Users/johncsantiago/Google Drive File Stream/My Drive/Sanders Lab Files/MGH Project/John R Output/PC2genevariation.csv")
PC=3
PCcontribute=contribution[,PC]
loading=abs(PCcontribute)
eigs <- pca$sdev^2
ve=(eigs / sum(eigs))*100
percent.variation=signif(ve,4)
percents=(PCcontribute*PCcontribute)*percent.variation[PC]
loading=loading[order(loading,decreasing=T)]
length(loading[loading>=equalloading.cutoff])
percents=percents[order(percents,decreasing=T)]
percent2=percents
temppercent=0
i=1
while(i<=length(percents)){
percents[i]=percents[i]+temppercent
temppercent=percents[i]
i=i+1
}
plot(x=c(1:length(percents)),y=percents,main=paste("PC",PC,sep=""),ylab="Percent Variation",xlab="Cumulative Gene Contribution  to Variance")
lines(x=c(length(loading[loading>=equalloading.cutoff]),length(loading[loading>=equalloading.cutoff])),y=c(0,percents[length(loading[loading>=equalloading.cutoff])]),col="red",lty=2,lwd=3)
lines(x=c(0,length(loading[loading>=equalloading.cutoff])),y=c(percents[length(loading[loading>=equalloading.cutoff])],percents[length(loading[loading>=equalloading.cutoff])]),col="red",lty=2,lwd=3)
percent2=as.matrix(percent2)
percent2=percent2[,c(1,1)]
percent2[,1]=(as.character(x2[as.character(x1[row.names(percent2)])]))
colnames(percent2)=c("symbol",paste("PC",PC," percent variation",sep=""))
most.var=percent2[1:length(loading[loading>=equalloading.cutoff]),]
write.csv(most.var,"/Users/johncsantiago/Google Drive File Stream/My Drive/Sanders Lab Files/MGH Project/John R Output/PC3genevariation.csv")
plotrgl()
lines3D(x=xcoords[c(1,4,7)],y=ycoords[c(1,4,7)],z=zcoords[c(1,4,7)],type="l",colkey=F,col="#99fffd",xlim=c(min(xcoords),max(xcoords)),zlim=c(min(zcoords),max(zcoords)),ylim=c(min(ycoords),max(ycoords)),zlab="PC1 (28.31%)",xlab="PC2 (13.51%)",ylab="PC3 (10.04%)",lty=1,axes=T,ticktype="detailed",box=T,bty="b2", theta=40, phi=20,r=4,lwd=2,cex.lab=1.5,alpha=.4)
lines3D(x=xcoords[c(2,5,8)],y=ycoords[c(2,5,8)],z=zcoords[c(2,5,8)],type="l",colkey=F,col="#99fffd",add=T,lty=2,lwd=2,alpha=.4)
lines3D(x=xcoords[c(3,6,9)],y=ycoords[c(3,6,9)],z=zcoords[c(3,6,9)],type="l",colkey=F,col="#99fffd",add=T,lty=3,lwd=2,alpha=.4)
lines3D(x=xcoords[c(1,4,7)],y=ycoords[c(1,4,7)],z=(1.1*zcoords[c(1,4,7)]),type="l",colkey=F,col="#ff00fb",add=T,lty=2,lwd=2,alpha=.4)
lines3D(x=xcoords[c(2,5,8)],y=ycoords[c(2,5,8)],z=(1.1*zcoords[c(2,5,8)]),type="l",colkey=F,col="#ff00fb",add=T,lty=2,lwd=2,alpha=.4)
lines3D(x=xcoords[c(3,6,9)],y=ycoords[c(3,6,9)],z=(1.1*zcoords[c(3,6,9)]),type="l",colkey=F,col="#ff00fb",add=T,lty=3,lwd=2,alpha=.4)
lines3D(x=xcoords[c(10,13,16)],y=ycoords[c(10,13,16)],z=zcoords[c(10,13,16)],type="l",colkey=F,col="#99fffd",add=T,lty=1,lwd=2,alpha=.4)
lines3D(x=xcoords[c(11,14,17)],y=ycoords[c(11,14,17)],z=zcoords[c(11,14,17)],type="l",colkey=F,col="#99fffd",add=T,lty=2,lwd=2,alpha=.4)
lines3D(x=xcoords[c(12,15,18)],y=ycoords[c(12,15,18)],z=zcoords[c(12,15,18)],type="l",colkey=F,col="#99fffd",add=T,lty=3,lwd=2,alpha=.4)
lines3D(x=xcoords[c(10,13,16)],y=ycoords[c(10,13,16)],z=(1.1*zcoords[c(10,13,16)]),type="l",colkey=F,col="#ff00fb",add=T,lty=1,lwd=2,alpha=.4)
lines3D(x=xcoords[c(11,14,17)],y=ycoords[c(11,14,17)],z=(1.1*zcoords[c(11,14,17)]),type="l",colkey=F,col="#ff00fb",add=T,lty=2,lwd=2,alpha=.4)
lines3D(x=xcoords[c(12,15,18)],y=ycoords[c(12,15,18)],z=(1.1*zcoords[c(12,15,18)]),type="l",colkey=F,col="#ff00fb",add=T,lty=3,lwd=2,alpha=.4)
plotrgl()
ywd="/Users/johncsantiago/Google Drive File Stream/My Drive/Santiago_RandLab_DigitalNotebook/FlyRefeedingPaper/"
setwd(ywd)
cpmdata=read.csv("SingleCountReads_NormalizedCPM.csv",row.names=1)
groups=read.csv("SingleCountReads_Metadata.csv",row.names=1)
so1=read.csv("/Users/johncsantiago/Google Drive File Stream/My Drive/Santiago_RandLab_DigitalNotebook/Thesis Files/Chapter 1/GenomeBiologyPaper/Supplementary/Table S2J SO1HR.SO0HC.csv",row.names=1)
singlecounts=read.csv("CombinedCountTable_SingleReadOnly.csv",row.names=1)
groups=read.csv("Fly_Combined_Count_Table_Metadata.csv")
singlecounts=singlecounts
groups=groups
groups=as.matrix(groups)
groups=as.data.frame(groups)
x<-DGEList(singlecounts)
class(x)
geneid <- rownames(x)
x$samples=cbind(x$samples,groups)
atleast=(10000000/min(x$samples$lib.size))
keep=rowSums(cpm(x)>=atleast)>=3
y=x[keep, ,keep.lib.sizes=FALSE]
z <- calcNormFactors(y, method = "TMM")
so1.c5=so1[row.names(cluster5),]
so1.c5=so1.c5[order(so1.c5$FDR),]
i=1
barplot(height = as.numeric(cpmdata[row.names(so1.c5)[i],]),names.arg = groups$Group,las=2,col=c(rep("grey",14),"blue","blue","grey","grey","red","red",rep("grey",10)),main=row.names(so1.c5)[i])
row.names(so1.c5)[i]
i=i+1
head(cpmdata)
groups
cpmdata=read.csv("SingleCountReads_NormalizedCPM.csv",row.names=1)
groups=read.csv("SingleCountReads_Metadata.csv",row.names=1)
groups
x <- cpmdata
group <- factor(groups$Group)
group
keep <- filterByExpr(y)
head(cpmdata)
head(groups)
colnames(cpmdata)
cpmdata=read.csv("SingleCountReads_NormalizedCPM.csv",row.names=1)
groups=read.csv("SingleCountReads_Metadata.csv",row.names=1)
groups
row.names=groups[,1]
row.names(groups)=groups[,1]
ywd="/Users/johncsantiago/Google Drive File Stream/My Drive/Santiago_RandLab_DigitalNotebook/FlyRefeedingPaper/"
setwd(ywd)
cpmdata=read.csv("SingleCountReads_NormalizedCPM.csv",row.names=1)
groups=read.csv("SingleCountReads_Metadata.csv",row.names=1)
row.names(groups)=groups[,1]
x <- cpmdata
colnames(cpmdata)=groups[colnames(cpmdata),"Group"]
head(cpmdata)
x <- cpmdata
group <- factor(groups$Group)
y <- DGEList(counts=x,group=group)
head(cpmdata)
ywd="/Users/johncsantiago/Google Drive File Stream/My Drive/Santiago_RandLab_DigitalNotebook/FlyRefeedingPaper/"
setwd(ywd)
cpmdata=read.csv("SingleCountReads_NormalizedCPM.csv",row.names=1)
groups=read.csv("SingleCountReads_Metadata.csv",row.names=1)
row.names(groups)=groups[,1]
##colnames(cpmdata)=groups[colnames(cpmdata),"Group"]
x <- cpmdata
group <- factor(groups$Group)
y <- DGEList(counts=x,group=group)
keep <- filterByExpr(y)
y <- y[keep,,keep.lib.sizes=FALSE] > y <- calcNormFactors(y)
design <- model.matrix(~group)
ywd="/Users/johncsantiago/Google Drive File Stream/My Drive/Santiago_RandLab_DigitalNotebook/FlyRefeedingPaper/"
setwd(ywd)
cpmdata=read.csv("SingleCountReads_NormalizedCPM.csv",row.names=1)
groups=read.csv("SingleCountReads_Metadata.csv",row.names=1)
row.names(groups)=groups[,1]
##colnames(cpmdata)=groups[colnames(cpmdata),"Group"]
x <- cpmdata
group <- factor(groups$Group)
y <- DGEList(counts=x,group=group)
keep <- filterByExpr(y)
y <- y[keep,,keep.lib.sizes=FALSE]
y <- calcNormFactors(y)
design <- model.matrix(~group)
y <- estimateDisp(y,design)
head(cpm(y))
head(cpmdata)
design
ywd="/Users/johncsantiago/Google Drive File Stream/My Drive/Santiago_RandLab_DigitalNotebook/FlyRefeedingPaper/"
setwd(ywd)
cpmdata=read.csv("SingleCountReads_NormalizedCPM.csv",row.names=1)
groups=read.csv("SingleCountReads_Metadata.csv",row.names=1)
row.names(groups)=groups[,1]
##colnames(cpmdata)=groups[colnames(cpmdata),"Group"]
x <- cpmdata
group <- factor(groups$Group)
y <- DGEList(counts=x,group=group)
keep <- filterByExpr(y)
y <- y[keep,,keep.lib.sizes=FALSE]
z <- calcNormFactors(y, method = "TMM")
design<-model.matrix(~0+groups$Group)
colnames(design) <- levels(groups$Group)
z = estimateGLMCommonDisp(z,design, verbose=T)
z = estimateGLMTrendedDisp(z,design)
z = estimateGLMTagwiseDisp(z,design)
fit <- glmFit(z, design)
compare = makeContrasts((SO0HC-OO0HC), levels=design)
lrt <- glmLRT(fit,contrast=as.vector(compare))
G_X_E<-topTags(lrt,adjust.method="BH", sort.by="PValue")
design
levels(groups$Group)
levels(group)
ywd="/Users/johncsantiago/Google Drive File Stream/My Drive/Santiago_RandLab_DigitalNotebook/FlyRefeedingPaper/"
setwd(ywd)
cpmdata=read.csv("SingleCountReads_NormalizedCPM.csv",row.names=1)
groups=read.csv("SingleCountReads_Metadata.csv",row.names=1)
row.names(groups)=groups[,1]
x <- cpmdata
group <- factor(groups$Group)
y <- DGEList(counts=x,group=group)
keep <- filterByExpr(y)
y <- y[keep,,keep.lib.sizes=FALSE]
z <- calcNormFactors(y, method = "TMM")
design<-model.matrix(~0+groups$Group)
colnames(design) <- levels(group)
z = estimateGLMCommonDisp(z,design, verbose=T)
z = estimateGLMTrendedDisp(z,design)
z = estimateGLMTagwiseDisp(z,design)
fit <- glmFit(z, design)
compare = makeContrasts((SO0HC-OO0HC), levels=design)
lrt <- glmLRT(fit,contrast=as.vector(compare))
G_X_E<-topTags(lrt,adjust.method="BH", sort.by="PValue")
results=G_X_E$table
head(results)
results[results$FDR<=.05,]
library(oligo)
library(affycoretools)
library(limma)
library(pd.hugene.2.0.st)
library(oligoClasses)
install.packages('https://cran.r-project.org/src/contrib/Archive/ff/ff_2.2-14.tar.gz ',repos=NULL)
install.packages('https://cran.r-project.org/src/contrib/Archive/ff/ff_2.2-14.tar.gz ')
install.packages("/Users/johncsantiago/Desktop/ff_4.0.2.tar")
library(oligo)
library(oligoClasses)
library(ff)
library(oligoClasses)
library(ff)
library(oligoClasses)
##download this
##https://cran.r-project.org/src/contrib/Archive/ff/ff_2.2-14.tar.gz
install.packages("/Users/johncsantiago/Downloads/ff_2.2-14.tar", repos = NULL, type="source")
library(oligo)
library(ff)
library(oligoClasses)
BiocManager::install("oligo")
library(oligo)
library(oligoClasses)
library(pd.hugene.2.0.st)
library(affycoretools)
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("affycoretools")
library(oligo)
library(affycoretools)
library(limma)
library(pd.hugene.2.0.st)
setwd("/Users/johncsantiago/Documents/Elizabeth Files/")
list.files()
gfs <- read.celfiles(
"JT_071318_HUGENE_4A_ElDeiry_(HuGene-2_0-st).CEL",
"JT_071318_HUGENE_4B_ElDeiry_(HuGene-2_0-st).CEL",
"JT_071318_HUGENE_DMSOA_ElDeiry_(HuGene-2_0-st).CEL",
"JT_071318_HUGENE_DMSOB_ElDeiry_(HuGene-2_0-st).CEL")
## Do RMA normalization & get ExpressionSet object:
ES <- rma(gfs)
head(ES)
lowExprCutoff <- quantile(exprs(ES), 0.1) ## see Below (*)
library(oligo)
library(affycoretools)
library(limma)
library(pd.hugene.2.0.st)
setwd("/Users/johncsantiago/Documents/Elizabeth Files/")
gfs <- read.celfiles(
"JT_071318_HUGENE_4A_ElDeiry_(HuGene-2_0-st).CEL",
"JT_071318_HUGENE_4B_ElDeiry_(HuGene-2_0-st).CEL",
"JT_071318_HUGENE_DMSOA_ElDeiry_(HuGene-2_0-st).CEL",
"JT_071318_HUGENE_DMSOB_ElDeiry_(HuGene-2_0-st).CEL")
## Do RMA normalization & get ExpressionSet object:
ES <- rma(gfs)
lowExprCutoff <- quantile(exprs(ES), 0.1) ## see Below (*)
setwd("/Users/johncsantiago/Documents/Elizabeth Files/")
lowExprCutoff <- quantile(exprs(ES), 0.1) ## see Below (*)
setwd("/Users/johncsantiago/Documents/Elizabeth Files/")
## Do RMA normalization & get ExpressionSet object:
ES <- rma(gfs)
lowExprCutoff <- quantile(exprs(ES), 0.1) ## see Below (*)
setwd("/Users/johncsantiago/Documents/Elizabeth Files/")
library(oligo)
library(affycoretools)
library(limma)
library(pd.hugene.2.0.st)
lowExprCutoff <- quantile(exprs(ES), 0.1) ## see Below (*)
gfs <- read.celfiles(
"JT_071318_HUGENE_4A_ElDeiry_(HuGene-2_0-st).CEL")
## Do RMA normalization & get ExpressionSet object:
ES <- rma(gfs)
lowExprCutoff <- quantile(exprs(ES), 0.1) ## see Below (*)
library(oligo)
library(affycoretools)
library(limma)
library(pd.hugene.2.0.st)
setwd("/Users/johncsantiago/Documents/Elizabeth Files/")
gfs <- read.celfiles(
"JT_071318_HUGENE_4A_ElDeiry_(HuGene-2_0-st).CEL",
"JT_071318_HUGENE_4B_ElDeiry_(HuGene-2_0-st).CEL",
"JT_071318_HUGENE_DMSOA_ElDeiry_(HuGene-2_0-st).CEL",
"JT_071318_HUGENE_DMSOB_ElDeiry_(HuGene-2_0-st).CEL")
## Do RMA normalization & get ExpressionSet object:
ES <- rma(gfs)
lowExprCutoff <- quantile(exprs(ES), 0.1) ## see Below (*)
setwd("/Users/johncsantiago/Documents/Elizabeth Files/")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("oligo")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("oligoClasses")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("affycoretools")
install.packages("/Users/johncsantiago/Downloads/ff_2.2-14.tar", repos = NULL, type="source")
library(oligo)
library(affycoretools)
library(limma)
library(pd.hugene.2.0.st)
setwd("/Users/johncsantiago/Documents/Elizabeth Files/")
gfs <- read.celfiles(
"JT_071318_HUGENE_4A_ElDeiry_(HuGene-2_0-st).CEL",
"JT_071318_HUGENE_4B_ElDeiry_(HuGene-2_0-st).CEL",
"JT_071318_HUGENE_DMSOA_ElDeiry_(HuGene-2_0-st).CEL",
"JT_071318_HUGENE_DMSOB_ElDeiry_(HuGene-2_0-st).CEL")
## Do RMA normalization & get ExpressionSet object:
ES <- rma(gfs)
lowExprCutoff <- quantile(exprs(ES), 0.1) ## see Below (*)
setwd("/Users/johncsantiago/Documents/Elizabeth Files/")
lowExprCutoff <- quantile(exprs(ES), 0.1) ## see Below (*)
setwd("/Users/johncsantiago/Documents/Elizabeth Files/")
## Do RMA normalization & get ExpressionSet object:
ES <- rma(gfs)
lowExprCutoff <- quantile(exprs(ES), 0.1) ## see Below (*)
setwd("/Users/johncsantiago/Documents/Elizabeth Files/")
lowExprCutoff <- quantile(exprs(ES), 0.1) ## see Below (*)
?quantile
head(exprs(ES))
names(ES)
ES
lowExprCutoff <- quantile(exprs(ES), 0.1) ## see Below (*)
names(ES)
head(exprs(ES))
tail(exprs(ES))
dim(exprs(ES))
exprs(ES)[(exprs(ES)[,1])==NA,]
exprs(ES)[(exprs(ES)[,1])<1,]
exprs(ES)[(exprs(ES)[,1])<.1,]
exprs(ES)[(exprs(ES)[,1])>100,]
exprs(ES)[(exprs(ES)[,1])>10,]
lowExprCutoff <- quantile(exprs(ES), 0.1) ## see Below (*)
class(exprs(ES))
